[{"C:\\Users\\Fitsum\\covid-tracker\\src\\index.js":"1","C:\\Users\\Fitsum\\covid-tracker\\src\\App.js":"2","C:\\Users\\Fitsum\\covid-tracker\\src\\InfoBox.js":"3","C:\\Users\\Fitsum\\covid-tracker\\src\\Map.js":"4","C:\\Users\\Fitsum\\covid-tracker\\src\\Table.js":"5","C:\\Users\\Fitsum\\covid-tracker\\src\\util.js":"6","C:\\Users\\Fitsum\\covid-tracker\\src\\LineGraph.js":"7"},{"size":224,"mtime":1610380627128,"results":"8","hashOfConfig":"9"},{"size":4319,"mtime":1610417439340,"results":"10","hashOfConfig":"9"},{"size":754,"mtime":1610388327736,"results":"11","hashOfConfig":"9"},{"size":616,"mtime":1610453550103,"results":"12","hashOfConfig":"9"},{"size":428,"mtime":1610396483614,"results":"13","hashOfConfig":"9"},{"size":342,"mtime":1610397659447,"results":"14","hashOfConfig":"9"},{"size":2954,"mtime":1610409061021,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"fsc0yb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Fitsum\\covid-tracker\\src\\index.js",[],["33","34"],"C:\\Users\\Fitsum\\covid-tracker\\src\\App.js",["35"],"\nimport React,{useState,useEffect} from 'react'\nimport './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select\n} from \"@material-ui/core\"\nimport InfoBox from \"./InfoBox\"\nimport Map from \"./Map\"\nimport Table from \"./Table\"\nimport {sortData} from \"./util\"\nimport LineGraph from \"./LineGraph\"\nimport \"leaflet/dist/leaflet.css\";\nimport {Card,CardContent,Typography} from \"@material-ui/core\"\n\n//STATE = How to write a variable in REACT\n//USEEFFECT= runs a piece of code based on a given condition\n// the code inside its body will run once  \n//whn the component loads and not again\n//\n///https://disease.sh/v3/covid-19/countries\n\nfunction App() {\n\n  const [countries,setCountries]=useState([]);\n  const [tableData,setTableData]=useState([]);\n\n  const [country,setCountry]=useState(\"WorldWide\");\n  const [countryInfo,setCountryInfo]=useState({});\n\n  const [mapCenter, setMapCenter] = useState({ lat: 34.846, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  \n\nuseEffect(()=>{\n  fetch(\"https://disease.sh/v3/covid-19/all\")\n  .then(response=>response.json())\n  .then((data)=>{\n    setCountryInfo(data);\n  \n  });\n},[]);\n\n\n  useEffect(() => {\n   //async -> send a request ,wait for it , do something with it\n   const getCountriesData=async()=>{\n     await fetch (\"https://disease.sh/v3/covid-19/countries\")\n     .then((response)=> response.json())\n     .then((data)=>{\n       const countries = data.map((country)=>(\n         {\n           name: country.country   //name of the country\n           ,\n           value: country.countryInfo.iso2   //the iso representation\n         }),\n\n    );\n       \n      const sortedData=sortData(data);\n       setTableData(sortedData);\n       setCountries(countries)\n      \n     });\n   };\n   getCountriesData();\n  }, [])\n      \n  \n  const onCountryChange=async (event)=>{\n    const countryCode=event.target.value;\n\n    const url = countryCode === 'WorldWide' \n    ? 'https://disease.sh/v3/covid-19/all' \n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n   await fetch(url)\n    .then((response) => response.json())\n    .then((data)=>{\n      setCountry(countryCode);\n\n      //All of the data from the country response\n        setCountryInfo(data);\n        \n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(5);\n    });\n  };\nconsole.log(\"country INFO\",countryInfo);\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n      <div className=\"app__header\">\n        <h1>COVID-19 TRACKER</h1>\n        <FormControl className=\"app__dropdown\">\n            <Select\n            variant=\"outlined\"\n            onChange={onCountryChange}\n            value={country}\n\n            >\n            {/** Loop through all the countries and show a drop\n             down list of the options */}\n            <MenuItem value=\"WorldWide\">WorldWide</MenuItem>\n            {countries.map(country=>(\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))\n            }\n            {/* <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem value=\"worldwide\">bla</MenuItem>\n            <MenuItem value=\"worldwide\">ab</MenuItem>\n            <MenuItem value=\"worldwide\">abl</MenuItem> */}\n            </Select>\n        </FormControl>\n       </div>\n      \n      <div className=\"app__stats\">\n          {/** InfoBoxes title=corona virus cases */}\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}   />\n          {/** InfoBoxes title corona recoveries */}\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          {/** InfoBoxes */}\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n      </div>\n      {/** Title + Select input dropdown field */}\n\n      {/** Map */}\n      <Map \n        center={mapCenter}\n        zoom={mapZoom}\n      />\n\n      </div>\n      <Card className=\"app__right\">\n            \n            <CardContent>\n                {/** Table */}\n              <h3>Live cases by country</h3>\n              <Table countries={tableData}/>\n                {/** Graph */}\n              <h3>Worldewide new Cases</h3>\n              <LineGraph/>\n\n            </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Fitsum\\covid-tracker\\src\\InfoBox.js",[],"C:\\Users\\Fitsum\\covid-tracker\\src\\Map.js",[],"C:\\Users\\Fitsum\\covid-tracker\\src\\Table.js",["36"],"import React from 'react'\r\nimport './Table.css'\r\n\r\n {/**Emmet */}\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({country,cases})=>(\r\n                <tr>\r\n               \r\n                    <td>{country}</td>\r\n                    <td><strong>{cases}</strong></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table\r\n","C:\\Users\\Fitsum\\covid-tracker\\src\\util.js",[],"C:\\Users\\Fitsum\\covid-tracker\\src\\LineGraph.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":15,"column":26,"nodeType":"43","messageId":"44","endLine":15,"endColumn":36},{"ruleId":"45","severity":1,"message":"46","line":4,"column":2,"nodeType":"47","messageId":"48","endLine":4,"endColumn":15},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]